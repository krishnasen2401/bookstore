import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lakshmi
 */
public class ProductList extends javax.swing.JFrame {
int index=-1;
int mouseflag=0;
Connection con;
Statement stmt;
String query;
ResultSet rs;
void categorysearch(){
DefaultTableModel model = (DefaultTableModel)jTable1.getModel();    
model.setRowCount(0);
        try{
        Class.forName("java.sql.Driver");
con=DriverManager.getConnection("jdbc:mysql://localhost/bookstore","root","root");
stmt = con.createStatement();
query="select * from inventory where category='"+jComboBox2.getSelectedItem()+"';";
rs=stmt.executeQuery(query);
while(rs.next()){
    int id=rs.getInt("itemid");
    String iname=rs.getString("itemname");
    String cname=rs.getString("category");
    int presentvalues=rs.getInt("value");
    int presentcost=rs.getInt("price");
    model.addRow(new Object[]{id,iname,cname,presentvalues,presentcost});
    }
rs.close();
stmt.close();
con.close();
}
catch(Exception e1){
            e1.printStackTrace();
        }finally{
            }
}
void itemidsearch(){
    int temp=Integer.parseInt(jTextField2.getText());
    System.out.println(temp);
DefaultTableModel model = (DefaultTableModel)jTable1.getModel();    
model.setRowCount(0);
        try{
        Class.forName("java.sql.Driver");
con=DriverManager.getConnection("jdbc:mysql://localhost/bookstore","root","root");
stmt = con.createStatement();
query="select * from inventory where itemid like '%"+temp+"%';";
rs=stmt.executeQuery(query);
while(rs.next()){
    int id=rs.getInt("itemid");
    String iname=rs.getString("itemname");
    String cname=rs.getString("category");
    int presentvalues=rs.getInt("value");
    int presentcost=rs.getInt("price");
    model.addRow(new Object[]{id,iname,cname,presentvalues,presentcost});
    }
rs.close();
stmt.close();
con.close();
}
catch(Exception e1){
            e1.printStackTrace();
        }finally{
            }
}
void itemnamesearch(){
DefaultTableModel model = (DefaultTableModel)jTable1.getModel();    
model.setRowCount(0);
        try{
        Class.forName("java.sql.Driver");
con=DriverManager.getConnection("jdbc:mysql://localhost/bookstore","root","root");
stmt = con.createStatement();
query="select * from inventory where itemname like '%"+jTextField1.getText()+"%';";
rs=stmt.executeQuery(query);
while(rs.next()){
    int id=rs.getInt("itemid");
    String iname=rs.getString("itemname");
    String cname=rs.getString("category");
    int presentvalues=rs.getInt("value");
    int presentcost=rs.getInt("price");
    model.addRow(new Object[]{id,iname,cname,presentvalues,presentcost});
    }
rs.close();
stmt.close();
con.close();
}
catch(Exception e1){
            e1.printStackTrace();
        }finally{
            }
}
    /**
     * Creates new form ProductList
     */
    public ProductList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox2FocusLost(evt);
            }
        });
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });

        jTextField2.setText("Search Using ID");
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Product List Or Search Or Inventory Stats");
        jLabel1.setIconTextGap(5);
        jLabel1.setName(""); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(128, 128));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item name", "Category", "Price of each Unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jTable1.setFocusable(false);
        jScrollPane2.setViewportView(jTable1);

        jTextField1.setText("Search Using Product Name");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Search Using Product Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2FocusLost

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        mouseflag=1;
        System.out.println("Combo Status Changed");// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        jTextField2.setText("");
        jTextField1.setText("Search Using Product Name");        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.setText("");
        jTextField2.setText("Search Using ID");        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(mouseflag==1){
            categorysearch();
            mouseflag=0;
        } else
        if(jTextField2.getText().equals("Search Using ID")&&jTextField1.getText().equals("Search Using Product Name"))
        JOptionPane.showMessageDialog(this, ("No Search Input Given"),("ERROR"), 2);
        else
        if(jTextField2.getText().equals("Search Using ID")){
            itemnamesearch();
        }else if(jTextField1.getText().equals("Search Using Product Name")){
            System.out.println(Integer.parseInt(jTextField2.getText()));
            itemidsearch();
            System.out.println(Integer.parseInt(jTextField2.getText()));
        }else {
            JOptionPane.showMessageDialog(this, ("No Search Input Given"),("ERROR"), 2);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
 //String labels[] = new String[10];
         //runs just after the windows is opened under window listeners
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
model.setRowCount(0);
        try{
        Class.forName("java.sql.Driver");
con=DriverManager.getConnection("jdbc:mysql://localhost/bookstore","root","root");
stmt = con.createStatement();
query="select * from inventory;";
rs=stmt.executeQuery(query);
while(rs.next()){
    int id=rs.getInt("itemid");
    String iname=rs.getString("itemname");
    String cname=rs.getString("category");
    int presentcost=rs.getInt("price");
    model.addRow(new Object[]{id,iname,cname,presentcost});
    }
rs.close();
stmt.close();
con.close();
}
catch(Exception e1){
            e1.printStackTrace();
        }finally{
            } 
        
      //above to fill table below is to update the categories in combox
        String temp;
        index=0;
        //int i=0;
        jComboBox2.removeAllItems(); 
        try{
            Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/bookstore","root","root");
            Statement stmt = con.createStatement();
            String query="select type from inventorymain;";
            ResultSet rs=stmt.executeQuery(query);
            while(rs.next()){
                temp=rs.getString("type");
                //i++;
                System.out.println(temp);
                //jComboBox2.addItem(labels[i]);
                jComboBox2.addItem(temp);
                //dlm.addElement(rs.getString("category"));
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e1){
            e1.printStackTrace();
        }finally{
        }
        index=1;//it means the jcombobox is cleared and enterd again
        System.out.println(index);
       System.out.println(jComboBox2.getSelectedItem()); 
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
      jTextField1.setText("Search Using Product Name");
      jTextField1.setText("Search Using Product Name"); // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2FocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
